/******************************************************************************\
 * Utilities: Icon.h
 *
 * Useful icon handling functions. Requires "Utilities: Miscellaneous" library.
 *
 * (C) Hipposoft 2009, 2010, 2011 <ahodgkin@rowing.org.uk>
\******************************************************************************/

#import "Miscellaneous.h"

/******************************************************************************\
 * allocFolderIcon()
 *
 * Obtain an CGImageRef containing the standard folder icon. Caller must
 * release this when no longer needed. Returns the largest icon available.
 *
 * In:  N/A
 * Out: CGImageRef for the standard folder icon image, or NULL if something
 *      went wrong.
\******************************************************************************/

CF_IMPLICIT_BRIDGING_ENABLED

CGImageRef allocFolderIcon( void );

CF_IMPLICIT_BRIDGING_DISABLED

/******************************************************************************\
 * getIconFamilyFromCGImage()
 *
 * Given a CGImage, returns an IconFamilyHandle for an icon family containing
 * a 'huge' 512x512 RGBA icon type and several smaller sizes generated by
 * scaling down the input image. Without these smaller sizes, the Finder will
 * run very slowly if displaying a file or folder to which the icon family has
 * been assigned as a custom icon set. Ideally the input CGImage should be
 * that size, but if not, it will be stretched to fit.
 *
 * Requires static data buffer "dataRGB" (see top of "Icons.m").
 *
 * Heavily based upon:
 *
 *   http://www.carbondev.com/site/?page=GetIconRefFromCGImage
 *
 * In:  CGImageRef for the image of interest.
 * Out: IconFamilyHandle for the equivalent 512x512 RGBA icon, or NULL if
 *      anything went wrong. Note that the caller is responsible for calling
 *      DisposeHandle() on a non-NULL return value when the icon family is no
 *      longer needed.
\******************************************************************************/

OSStatus createIconFamilyFromCGImage( CGImageRef cgImage, IconFamilyHandle * iconHndRef );

/******************************************************************************\
 * hasCustomIcon()
 *
 * Does the given file or folder appear to have a custom icon defined? Code is
 * based on the implementation for "saveCustomIcon" so see that for further
 * background information.
 *
 * In:  Full POSIX path of file or folder to update;
 *
 * Out: YES if there's a custom icon resource, NO for any other condition
 *      (including internal errors).
\******************************************************************************/

Boolean hasCustomIcon( NSString * fullPosixPath );

/******************************************************************************\
 * saveCustomIcon()
 *
 * Saves a custom icon for the given file. Note that custom disk (volume) icons
 * are not supported, but custom icons for regular files and folders should
 * work fine.
 *
 * The function is a hybrid based on adaptation and a combination of code at:
 *
 *   http://developer.apple.com/samplecode/SetCustomIcon/
 *   http://www.cocoabuilder.com/archive/message/cocoa/2004/2/3/95889
 *
 * In:  Full POSIX path of file or folder to update;
 *
 *      IconFamilyHandle for the icon to set (see "getIconFamilyFromCGImage"
 *      for one of many different ways to obtain such a thing).
 *
 * Out: Error indication - noErr if OK, else failed.
\******************************************************************************/

OSStatus saveCustomIcon( NSString * fullPosixPath, IconFamilyHandle icnsH );
